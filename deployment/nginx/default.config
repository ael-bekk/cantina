user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    proxy_read_timeout 600;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
	
	upstream backend {
		least_conn;
		server backend:8000 max_fails=3 fail_timeout=60 weight=1;
	}

	upstream frontend {
		least_conn;
		server frontend:3000 max_fails=3 fail_timeout=60 weight=1;
	}

	map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
	}
	server {
	  listen 80 default_server;
	  listen [::]:80 default_server;
	  server_name _;
	  return 301 https://$host$request_uri;
	}
	server {
		keepalive_timeout   70;
		client_max_body_size 20M;
		listen                  443 ssl default_server;
		listen                  [::]:443 ssl default_server;
		ssl_certificate         /etc/ssl/1337.ma.crt;
		ssl_certificate_key     /etc/ssl/1337.ma.key;

		location / {
			add_header Pragma "no-cache";
			add_header Cache-Control "no-cache, must-revalidate";
			proxy_pass http://frontend;
		}

		location /pgadmin4/ {
			proxy_set_header X-Script-Name /pgadmin4;
			proxy_set_header Host $host;
			proxy_pass http://pgadmin4;
			proxy_redirect off;
		}
		
		location /api {
			try_files $uri @proxy_backend;
		}

		location /ws/ {
        	try_files $uri @proxy_ws;
    	}
    	location @proxy_ws {
			proxy_pass http://backend;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $http_host;
    	}

		location @proxy_backend {
			proxy_http_version 1.1;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Server $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Host $http_host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_pass_request_headers on;
			proxy_pass   http://backend;
		}
	}
}
